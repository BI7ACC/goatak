---
version: 2
before:
  hooks:
    - go mod tidy
builds:
  - id: server
    main: ./cmd/goatak_server
    binary: goatak_server
    env:
      - CGO_ENABLED=0
    mod_timestamp: '{{ .CommitTimestamp }}'
    flags:
      - '-trimpath'
    ldflags:
      - '-s -w -X main.gitRevision={{.Version}} -X main.gitCommit={{.Commit}}'
    goos: [ windows, linux, darwin ]
    goarch: [ amd64, arm64 ]
    ignore:
      - goos: windows
        goarch: arm64
  - id: ctl
    main: ./cmd/userctl
    binary: userctl
    env:
      - CGO_ENABLED=0
    mod_timestamp: '{{ .CommitTimestamp }}'
    flags:
      - -trimpath
    ldflags:
      - '-s -w -X main.gitRevision={{.Version}} -X main.gitCommit={{.Commit}}'
    goos: [ windows, linux, darwin ]
    goarch: [ amd64, arm64 ]
    ignore:
      - goos: windows
        goarch: arm64
  - id: takreplay
    main: ./cmd/takreplay
    binary: takreplay
    env:
      - CGO_ENABLED=0
    mod_timestamp: '{{ .CommitTimestamp }}'
    flags:
      - -trimpath
    ldflags:
      - '-s -w -X main.gitRevision={{.Version}} -X main.gitCommit={{.Commit}}'
    goos: [ windows, linux, darwin ]
    goarch: [ amd64, arm64 ]
    ignore:
      - goos: windows
        goarch: arm64
  - id: client
    main: ./cmd/webclient
    binary: goatak_client
    env:
      - CGO_ENABLED=0
    mod_timestamp: '{{ .CommitTimestamp }}'
    flags:
      - -trimpath
    ldflags:
      - '-s -w -X main.gitRevision={{.Version}} -X main.gitCommit={{.Commit}}'
    goos: [ windows, linux, darwin ]
    goarch: [ amd64, arm64 ]
    ignore:
      - goos: windows
        goarch: arm64
archives:
  - id: server
    builds: [ server, ctl, takreplay ]
    format: zip
    name_template: 'server_{{ .Version }}_{{ .Os }}_{{ .Arch }}{{ .Arm }}'
    files:
      - goatak_server.yml
      - users.yml
      - cert/*
      - data/*
  - id: client
    builds: [ client, takreplay ]
    format: zip
    name_template: 'client_{{ .Version }}_{{ .Os }}_{{ .Arch }}{{ .Arm }}'
    files:
      - goatak_client*.yml

changelog:
  use: github
  abbrev: -1

  groups:
    - title: Features
      regexp: '^.*?feat(\([[:word:]]+\))??!?:.+$'
      order: 0
    - title: "Bug fixes"
      regexp: '^.*?bug(\([[:word:]]+\))??!?:.+$'
      order: 1
    - title: Others
      order: 999

  filters:
    exclude:
      - typo
      - \.
# yaml-language-server: $schema=https://goreleaser.com/static/schema.json